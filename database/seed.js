const bcrypt = require('bcrypt');
const { query } = require('../config/database');

async function seedDatabase() {
    try {
        console.log('üå± Seeding database with demo users...');

        // –•—ç—à–∏—Ä—É–µ–º –ø–∞—Ä–æ–ª–∏
        const adminPassword = await bcrypt.hash('admin123', 10);
        const userPassword = await bcrypt.hash('pass123', 10);
        
        console.log('‚úÖ Passwords hashed successfully');

        // –û—á–∏—Å—Ç–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ (–≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ –∏–∑-–∑–∞ foreign keys)
        await query('DELETE FROM messages');
        await query('DELETE FROM chat_participants');
        await query('DELETE FROM chats');
        await query('DELETE FROM users');
        
        // –°–±—Ä–æ—Å–∏—Ç—å sequences
        await query('ALTER SEQUENCE users_id_seq RESTART WITH 1');
        await query('ALTER SEQUENCE chats_id_seq RESTART WITH 1');
        await query('ALTER SEQUENCE messages_id_seq RESTART WITH 1');
        
        console.log('‚úÖ Cleared existing data');

        // 1. –°–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        const usersResult = await query(`
            INSERT INTO users (username, password_hash, name, role, department, is_active)
            VALUES 
                ('admin', $1, '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä', 'admin', NULL, true),
                ('assistant1', $2, '–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –ê–Ω–Ω–∞', 'assistant', NULL, true),
                ('assistant2', $2, '–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –ë–æ—Ä–∏—Å', 'assistant', NULL, true),
                ('rop_sales', $2, '–†–û–ü Sales - –í–∏–∫—Ç–æ—Ä', 'rop', 'Sales', true),
                ('rop_marketing', $2, '–†–û–ü Marketing - –ì–∞–ª–∏–Ω–∞', 'rop', 'Marketing', true),
                ('operator1', $2, '–û–ø–µ—Ä–∞—Ç–æ—Ä Sales - –î–º–∏—Ç—Ä–∏–π', 'operator', 'Sales', true),
                ('operator2', $2, '–û–ø–µ—Ä–∞—Ç–æ—Ä Sales - –ï–ª–µ–Ω–∞', 'operator', 'Sales', true),
                ('operator3', $2, '–û–ø–µ—Ä–∞—Ç–æ—Ä Marketing - –ñ–∞–Ω–Ω–∞', 'operator', 'Marketing', true),
                ('dev1', $2, '–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –ò–≤–∞–Ω', 'employee', 'IT', true),
                ('dev2', $2, '–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –ö—Å–µ–Ω–∏—è', 'employee', 'IT', true)
            RETURNING id
        `, [adminPassword, userPassword]);

        console.log('‚úÖ Inserted demo users');

        // –ü–æ–ª—É—á–∏—Ç—å ID —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        const userIds = usersResult.rows.map(row => row.id);
        const [adminId, assistant1Id, assistant2Id, ropSalesId, ropMarketingId, 
               operator1Id, operator2Id, operator3Id, dev1Id, dev2Id] = userIds;

        // 2. –°–æ–∑–¥–∞—Ç—å —á–∞—Ç—ã
        const chatsResult = await query(`
            INSERT INTO chats (name, type, department, created_by)
            VALUES 
                ('–û–±—â–∏–π —á–∞—Ç', 'group', NULL, $1),
                ('–û—Ç–¥–µ–ª –ø—Ä–æ–¥–∞–∂', 'department', 'Sales', $2),
                ('–û—Ç–¥–µ–ª –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–∞', 'department', 'Marketing', $3),
                ('IT –∫–æ–º–∞–Ω–¥–∞', 'department', 'IT', $1),
                (NULL, 'direct', NULL, $1),
                (NULL, 'direct', NULL, $2)
            RETURNING id
        `, [adminId, ropSalesId, ropMarketingId]);

        console.log('‚úÖ Created chats');

        const chatIds = chatsResult.rows.map(row => row.id);
        const [generalChatId, salesChatId, marketingChatId, itChatId, 
               directChat1Id, directChat2Id] = chatIds;

        // 3. –î–æ–±–∞–≤–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ —á–∞—Ç—ã
        await query(`
            INSERT INTO chat_participants (chat_id, user_id)
            VALUES 
                -- –û–±—â–∏–π —á–∞—Ç (–≤—Å–µ)
                ($1, $2), ($1, $3), ($1, $4), ($1, $5), ($1, $6),
                ($1, $7), ($1, $8), ($1, $9), ($1, $10), ($1, $11),
                -- –û—Ç–¥–µ–ª –ø—Ä–æ–¥–∞–∂
                ($12, $2), ($12, $5), ($12, $7), ($12, $8),
                -- –û—Ç–¥–µ–ª –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–∞
                ($13, $2), ($13, $6), ($13, $9),
                -- IT –∫–æ–º–∞–Ω–¥–∞
                ($14, $2), ($14, $10), ($14, $11),
                -- –õ–∏—á–Ω—ã–π —á–∞—Ç 1 (–∞–¥–º–∏–Ω + –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç1)
                ($15, $2), ($15, $3),
                -- –õ–∏—á–Ω—ã–π —á–∞—Ç 2 (–†–û–ü Sales + –æ–ø–µ—Ä–∞—Ç–æ—Ä1)
                ($16, $5), ($16, $7)
        `, [
            generalChatId, adminId, assistant1Id, assistant2Id, ropSalesId, ropMarketingId,
            operator1Id, operator2Id, operator3Id, dev1Id, dev2Id,
            salesChatId, marketingChatId, itChatId, directChat1Id, directChat2Id
        ]);

        console.log('‚úÖ Added chat participants');

        // 4. –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        await query(`
            INSERT INTO messages (chat_id, user_id, content)
            VALUES 
                ($1, $2, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π —á–∞—Ç! üëã'),
                ($1, $3, '–ü—Ä–∏–≤–µ—Ç –≤—Å–µ–º! –†–∞–¥–∞ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –∫–æ–º–∞–Ω–¥–µ.'),
                ($4, $5, '–û—Ç–¥–µ–ª –ø—Ä–æ–¥–∞–∂, –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –î–∞–≤–∞–π—Ç–µ –æ–±—Å—É–¥–∏–º —Ü–µ–ª–∏ –Ω–∞ —ç—Ç–æ—Ç –∫–≤–∞—Ä—Ç–∞–ª.'),
                ($6, $7, 'IT –∫–æ–º–∞–Ω–¥–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ! üíª'),
                ($8, $2, '–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞?'),
                ($8, $3, '–û—Ç–ª–∏—á–Ω–æ, —Å–ø–∞—Å–∏–±–æ! –£ —Ç–µ–±—è –∫–∞–∫?')
        `, [
            generalChatId, adminId, assistant1Id,
            salesChatId, ropSalesId,
            itChatId, dev1Id,
            directChat1Id, adminId, assistant1Id
        ]);

        console.log('‚úÖ Added welcome messages');
        console.log('');
        console.log('‚úÖ Database seeded successfully!');
        console.log('');
        console.log('üìã Demo users created:');
        console.log('  ‚Ä¢ admin / admin123 - –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä (–≤—Å–µ –ø—Ä–∞–≤–∞)');
        console.log('  ‚Ä¢ assistant1 / pass123 - –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –ê–Ω–Ω–∞');
        console.log('  ‚Ä¢ rop_sales / pass123 - –†–û–ü Sales - –í–∏–∫—Ç–æ—Ä');
        console.log('  ‚Ä¢ operator1 / pass123 - –û–ø–µ—Ä–∞—Ç–æ—Ä Sales - –î–º–∏—Ç—Ä–∏–π');
        console.log('  ‚Ä¢ dev1 / pass123 - –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –ò–≤–∞–Ω');
        console.log('');

    } catch (error) {
        console.error('‚ùå Error seeding database:', error);
        throw error;
    }
}

// –ï—Å–ª–∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
    seedDatabase()
        .then(() => {
            console.log('‚úÖ Seeding complete!');
            process.exit(0);
        })
        .catch(error => {
            console.error('‚ùå Seeding failed:', error);
            process.exit(1);
        });
}

module.exports = seedDatabase;