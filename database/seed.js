const bcrypt = require('bcrypt');
const { query } = require('../config/database');

async function seedDatabase() {
    try {
        console.log('üå± Seeding database with demo users (NEW ROLES)...');

        // –•—ç—à–∏—Ä—É–µ–º –ø–∞—Ä–æ–ª–∏
        const adminPassword = await bcrypt.hash('admin123', 10);
        const userPassword = await bcrypt.hash('pass123', 10);
        
        console.log('‚úÖ Passwords hashed successfully');

        // –û—á–∏—Å—Ç–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ (–≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ –∏–∑-–∑–∞ foreign keys)
        await query('DELETE FROM admin_logs');
        await query('DELETE FROM messages');
        await query('DELETE FROM chat_participants');
        await query('DELETE FROM chats');
        await query('DELETE FROM users');
        
        // –°–±—Ä–æ—Å–∏—Ç—å sequences
        await query('ALTER SEQUENCE users_id_seq RESTART WITH 1');
        await query('ALTER SEQUENCE chats_id_seq RESTART WITH 1');
        await query('ALTER SEQUENCE messages_id_seq RESTART WITH 1');
        await query('ALTER SEQUENCE admin_logs_id_seq RESTART WITH 1');
        
        console.log('‚úÖ Cleared existing data');

        // 1. –°–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        const usersResult = await query(`
            INSERT INTO users (username, password_hash, name, role, department, is_active)
            VALUES 
                -- –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã (–Ω–µ—Ç –æ—Ç–¥–µ–ª–∞)
                ('admin', $1, '–ì–ª–∞–≤–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä', 'admin', NULL, true),
                
                -- –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç—ã (–Ω–µ—Ç –æ—Ç–¥–µ–ª–∞)
                ('assistant1', $2, '–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –ê–Ω–Ω–∞', 'assistant', NULL, true),
                ('assistant2', $2, '–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –ë–æ—Ä–∏—Å', 'assistant', NULL, true),
                
                -- –†–û–ü—ã (–µ—Å—Ç—å –æ—Ç–¥–µ–ª—ã)
                ('rop_sales', $2, '–†–û–ü Sales - –í–∏–∫—Ç–æ—Ä', 'rop', 'Sales', true),
                ('rop_marketing', $2, '–†–û–ü Marketing - –ì–∞–ª–∏–Ω–∞', 'rop', 'Marketing', true),
                
                -- –û–ø–µ—Ä–∞—Ç–æ—Ä—ã (–µ—Å—Ç—å –æ—Ç–¥–µ–ª—ã)
                ('operator1', $2, '–û–ø–µ—Ä–∞—Ç–æ—Ä Sales - –î–º–∏—Ç—Ä–∏–π', 'operator', 'Sales', true),
                ('operator2', $2, '–û–ø–µ—Ä–∞—Ç–æ—Ä Sales - –ï–ª–µ–Ω–∞', 'operator', 'Sales', true),
                ('operator3', $2, '–û–ø–µ—Ä–∞—Ç–æ—Ä Marketing - –ñ–∞–Ω–Ω–∞', 'operator', 'Marketing', true),
                
                -- –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ (–¥–ª—è –ø—Ä–∏–º–µ—Ä–∞)
                ('employee1', $2, '–°–æ—Ç—Ä—É–¥–Ω–∏–∫ IT - –ò–≤–∞–Ω', 'employee', 'IT', true),
                ('employee2', $2, '–°–æ—Ç—Ä—É–¥–Ω–∏–∫ IT - –ú–∞—Ä–∏—è', 'employee', 'IT', true)
            RETURNING id
        `, [adminPassword, userPassword]);

        console.log('‚úÖ Inserted demo users');

        // –ü–æ–ª—É—á–∏—Ç—å ID —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        const userIds = usersResult.rows.map(row => row.id);
        const [adminId, assistant1Id, assistant2Id, ropSalesId, ropMarketingId, 
               operator1Id, operator2Id, operator3Id, employee1Id, employee2Id] = userIds;

        // 2. –°–æ–∑–¥–∞—Ç—å —á–∞—Ç—ã
        const chatsResult = await query(`
            INSERT INTO chats (name, type, department, created_by)
            VALUES 
                -- –û–±—â–∏–µ —á–∞—Ç—ã
                ('–†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ', 'group', NULL, $1),
                ('–í—Å–µ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç—ã', 'group', NULL, $1),
                
                -- –û—Ç–¥–µ–ª—å–Ω—ã–µ —á–∞—Ç—ã –ø–æ –æ—Ç–¥–µ–ª–∞–º
                ('–û—Ç–¥–µ–ª –ø—Ä–æ–¥–∞–∂', 'department', 'Sales', $2),
                ('–û—Ç–¥–µ–ª –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–∞', 'department', 'Marketing', $3),
                
                -- –ü—Ä–∏–º–µ—Ä—ã –ª–∏—á–Ω—ã—Ö —á–∞—Ç–æ–≤
                (NULL, 'direct', NULL, $1),  -- –∞–¥–º–∏–Ω + –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç1
                (NULL, 'direct', NULL, $2),  -- –†–û–ü Sales + –æ–ø–µ—Ä–∞—Ç–æ—Ä1
                (NULL, 'direct', NULL, $4)   -- –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç1 + –æ–ø–µ—Ä–∞—Ç–æ—Ä1
            RETURNING id
        `, [adminId, ropSalesId, ropMarketingId, assistant1Id]);

        console.log('‚úÖ Created chats');

        const chatIds = chatsResult.rows.map(row => row.id);
        const [managementChatId, assistantsChatId, salesChatId, marketingChatId, 
               directChat1Id, directChat2Id, directChat3Id] = chatIds;

        // 3. –î–æ–±–∞–≤–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ —á–∞—Ç—ã
        await query(`
            INSERT INTO chat_participants (chat_id, user_id)
            VALUES 
                -- –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ (—Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω—ã –∏ –†–û–ü—ã)
                ($1, $2), ($1, $5), ($1, $6),
                
                -- –í—Å–µ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç—ã
                ($7, $2), ($7, $3), ($7, $4),
                
                -- –û—Ç–¥–µ–ª –ø—Ä–æ–¥–∞–∂ (–†–û–ü + –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã Sales)
                ($8, $5), ($8, $9), ($8, $10),
                
                -- –û—Ç–¥–µ–ª –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–∞ (–†–û–ü + –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã Marketing)
                ($11, $6), ($11, $12),
                
                -- –õ–∏—á–Ω—ã–π —á–∞—Ç 1 (–∞–¥–º–∏–Ω + –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç1)
                ($13, $2), ($13, $3),
                
                -- –õ–∏—á–Ω—ã–π —á–∞—Ç 2 (–†–û–ü Sales + –æ–ø–µ—Ä–∞—Ç–æ—Ä1)
                ($14, $5), ($14, $9),
                
                -- –õ–∏—á–Ω—ã–π —á–∞—Ç 3 (–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç1 + –æ–ø–µ—Ä–∞—Ç–æ—Ä1)
                ($15, $3), ($15, $9)
        `, [
            managementChatId, adminId, ropSalesId, ropMarketingId,
            assistantsChatId, adminId, assistant1Id, assistant2Id,
            salesChatId, ropSalesId, operator1Id, operator2Id,
            marketingChatId, ropMarketingId, operator3Id,
            directChat1Id, adminId, assistant1Id,
            directChat2Id, ropSalesId, operator1Id,
            directChat3Id, assistant1Id, operator1Id
        ]);

        console.log('‚úÖ Added chat participants');

        // 4. –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        await query(`
            INSERT INTO messages (chat_id, user_id, content)
            VALUES 
                ($1, $2, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π —á–∞—Ç! üëã'),
                ($1, $3, '–ü—Ä–∏–≤–µ—Ç, —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ! –ì–æ—Ç–æ–≤—ã –∫ —Ä–∞–±–æ—Ç–µ.'),
                
                ($4, $5, '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç—ã! –≠—Ç–æ –æ–±—â–∏–π —á–∞—Ç –¥–ª—è –≤—Å–µ—Ö –ø–æ–º–æ—â–Ω–∏–∫–æ–≤.'),
                
                ($6, $7, '–û—Ç–¥–µ–ª –ø—Ä–æ–¥–∞–∂, –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! –ù–∞—á–∏–Ω–∞–µ–º —Ä–∞–±–æ—Ç—É.'),
                ($6, $8, '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ì–æ—Ç–æ–≤ –∫ –∑–∞–¥–∞—á–∞–º.'),
                
                ($9, $10, '–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞?'),
                ($9, $3, '–û—Ç–ª–∏—á–Ω–æ, —Å–ø–∞—Å–∏–±–æ!')
        `, [
            managementChatId, adminId, ropSalesId,
            assistantsChatId, assistant1Id,
            salesChatId, ropSalesId, operator1Id,
            directChat1Id, adminId, assistant1Id
        ]);

        console.log('‚úÖ Added welcome messages');
        console.log('');
        console.log('‚úÖ Database seeded successfully!');
        console.log('');
        console.log('üìã Demo users created:');
        console.log('‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê');
        console.log('üëë –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–´ (–≤—Å–µ –ø—Ä–∞–≤–∞):');
        console.log('  ‚Ä¢ admin / admin123 - –ì–ª–∞–≤–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä');
        console.log('');
        console.log('üëî –ê–°–°–ò–°–¢–ï–ù–¢–´ (–ø–∏—à—É—Ç –≤—Å–µ–º):');
        console.log('  ‚Ä¢ assistant1 / pass123 - –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –ê–Ω–Ω–∞');
        console.log('  ‚Ä¢ assistant2 / pass123 - –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –ë–æ—Ä–∏—Å');
        console.log('');
        console.log('üìä –†–£–ö–û–í–û–î–ò–¢–ï–õ–ò –û–¢–î–ï–õ–û–í (–†–û–ü—ã):');
        console.log('  ‚Ä¢ rop_sales / pass123 - –†–û–ü Sales - –í–∏–∫—Ç–æ—Ä');
        console.log('  ‚Ä¢ rop_marketing / pass123 - –†–û–ü Marketing - –ì–∞–ª–∏–Ω–∞');
        console.log('');
        console.log('üíº –û–ü–ï–†–ê–¢–û–†–´ (–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–µ –ø—Ä–∞–≤–∞):');
        console.log('  ‚Ä¢ operator1 / pass123 - –û–ø–µ—Ä–∞—Ç–æ—Ä Sales - –î–º–∏—Ç—Ä–∏–π');
        console.log('  ‚Ä¢ operator2 / pass123 - –û–ø–µ—Ä–∞—Ç–æ—Ä Sales - –ï–ª–µ–Ω–∞');
        console.log('  ‚Ä¢ operator3 / pass123 - –û–ø–µ—Ä–∞—Ç–æ—Ä Marketing - –ñ–∞–Ω–Ω–∞');
        console.log('');
        console.log('üìù –ü–†–ê–í–ê –î–û–°–¢–£–ü–ê:');
        console.log('‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê');
        console.log('‚úÖ –ê–¥–º–∏–Ω—ã: –≤–∏–¥—è—Ç –∏ –ø–∏—à—É—Ç –í–°–Å');
        console.log('‚úÖ –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç—ã: –ø–∏—à—É—Ç –≤—Å–µ–º');
        console.log('‚úÖ –†–û–ü—ã: —É–ø—Ä–∞–≤–ª—è—é—Ç —Å–≤–æ–∏–º–∏ –æ—Ç–¥–µ–ª–∞–º–∏, –ø–∏—à—É—Ç –≤—Å–µ–º');
        console.log('‚ö†Ô∏è  –û–ø–µ—Ä–∞—Ç–æ—Ä—ã: –ø–∏—à—É—Ç –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞–º –∏ —Å–≤–æ–µ–º—É –†–û–ü—É');
        console.log('‚ùå –û–ø–µ—Ä–∞—Ç–æ—Ä—ã: –ù–ï –ø–∏—à—É—Ç –¥—Ä—É–≥ –¥—Ä—É–≥—É');
        console.log('');

    } catch (error) {
        console.error('‚ùå Error seeding database:', error);
        throw error;
    }
}

// –ï—Å–ª–∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
    seedDatabase()
        .then(() => {
            console.log('‚úÖ Seeding complete!');
            process.exit(0);
        })
        .catch(error => {
            console.error('‚ùå Seeding failed:', error);
            process.exit(1);
        });
}

module.exports = seedDatabase;