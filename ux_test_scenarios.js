const axios = require('axios');

const BASE_URL = 'http://localhost:3000/api';
let adminToken, operatorToken;

console.log('\nüé® UX/UI –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï - –ü–†–û–í–ï–†–ö–ê –ó–î–†–ê–í–û–ì–û –°–ú–´–°–õ–ê\n');

async function testUserExperience() {
    try {
        // 1. ONBOARDING - –ü–µ—Ä–≤—ã–π –æ–ø—ã—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        console.log('=== 1. ONBOARDING - –ü–µ—Ä–≤—ã–π –æ–ø—ã—Ç ===');
        
        // –ü–æ–ø—ã—Ç–∫–∞ –≤–æ–π—Ç–∏ –±–µ–∑ credentials
        try {
            await axios.post(`${BASE_URL}/auth/login`, {});
            console.log('‚ùå –°–∏—Å—Ç–µ–º–∞ –ø—Ä–æ–ø—É—Å—Ç–∏–ª–∞ –ø—É—Å—Ç–æ–π –ª–æ–≥–∏–Ω');
        } catch (error) {
            if (error.response?.data?.error) {
                console.log(`‚úÖ –ü–æ–Ω—è—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ: "${error.response.data.error}"`);
            } else {
                console.log('‚ö†Ô∏è –ù–µ—Ç –ø–æ–Ω—è—Ç–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ');
            }
        }

        // –ü–æ–ø—ã—Ç–∫–∞ —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –ø–∞—Ä–æ–ª–µ–º
        try {
            await axios.post(`${BASE_URL}/auth/login`, {
                username: 'admin',
                password: 'wrongpassword'
            });
            console.log('‚ùå –°–∏—Å—Ç–µ–º–∞ –ø—Ä–æ–ø—É—Å—Ç–∏–ª–∞ –Ω–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å');
        } catch (error) {
            if (error.response?.data?.error === 'Invalid credentials') {
                console.log('‚úÖ –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–Ω–µ —Ä–∞—Å–∫—Ä—ã–≤–∞–µ—Ç username)');
            } else {
                console.log(`‚ö†Ô∏è –°–æ–æ–±—â–µ–Ω–∏–µ: ${error.response?.data?.error}`);
            }
        }

        // –£—Å–ø–µ—à–Ω—ã–π –ª–æ–≥–∏–Ω
        const loginRes = await axios.post(`${BASE_URL}/auth/login`, {
            username: 'admin',
            password: 'admin123'
        });
        adminToken = loginRes.data.token;
        const user = loginRes.data.user;
        
        console.log(`‚úÖ –£—Å–ø–µ—à–Ω—ã–π –ª–æ–≥–∏–Ω`);
        console.log(`   –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è: token, user {${Object.keys(user).join(', ')}}`);
        
        if (!user.name || !user.role) {
            console.log('‚ö†Ô∏è –ù–µ —Ö–≤–∞—Ç–∞–µ—Ç –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è UI');
        }

        // 2. –ù–ê–í–ò–ì–ê–¶–ò–Ø - –ß—Ç–æ –≤–∏–¥–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ—Å–ª–µ –ª–æ–≥–∏–Ω–∞?
        console.log('\n=== 2. –ù–ê–í–ò–ì–ê–¶–ò–Ø - –ü–µ—Ä–≤—ã–π —ç–∫—Ä–∞–Ω ===');
        
        const chatsRes = await axios.get(`${BASE_URL}/chats`, {
            headers: { Authorization: `Bearer ${adminToken}` }
        });
        
        console.log(`‚úÖ –ü–æ–ª—É—á–µ–Ω–æ ${chatsRes.data.chats?.length || 0} —á–∞—Ç–æ–≤`);
        
        if (chatsRes.data.chats?.length > 0) {
            const chat = chatsRes.data.chats[0];
            console.log(`   –ü—Ä–∏–º–µ—Ä —á–∞—Ç–∞: ${chat.name || '–ë–µ–∑ –∏–º–µ–Ω–∏'}`);
            console.log(`   –ï—Å—Ç—å –ª–∏ –ø—Ä–µ–≤—å—é –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è? ${chat.last_message ? '‚úÖ' : '‚ùå'}`);
            console.log(`   –ï—Å—Ç—å –ª–∏ —Å—á–µ—Ç—á–∏–∫ –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö? ${typeof chat.unread_count !== 'undefined' ? '‚úÖ' : '‚ùå'}`);
            console.log(`   –ï—Å—Ç—å –ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∏? ${chat.participants?.length > 0 ? '‚úÖ' : '‚ùå'}`);
        }

        // 3. –°–û–ó–î–ê–ù–ò–ï –ß–ê–¢–ê - –ù–∞—Å–∫–æ–ª—å–∫–æ —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ?
        console.log('\n=== 3. –°–û–ó–î–ê–ù–ò–ï –ß–ê–¢–ê - –ü—Ä–æ—Å—Ç–æ—Ç–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è ===');
        
        // –ü–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞—Ç—å —á–∞—Ç –±–µ–∑ –∏–º–µ–Ω–∏
        try {
            await axios.post(`${BASE_URL}/chats/group`, {
                participantIds: [1, 2]
            }, {
                headers: { Authorization: `Bearer ${adminToken}` }
            });
            console.log('‚ö†Ô∏è –°–∏—Å—Ç–µ–º–∞ —Å–æ–∑–¥–∞–ª–∞ —á–∞—Ç –±–µ–∑ –∏–º–µ–Ω–∏');
        } catch (error) {
            console.log(`‚úÖ –¢—Ä–µ–±—É–µ—Ç –∏–º—è —á–∞—Ç–∞: "${error.response?.data?.error}"`);
        }

        // –ü–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞—Ç—å —á–∞—Ç –±–µ–∑ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
        try {
            await axios.post(`${BASE_URL}/chats/group`, {
                name: '–¢–µ—Å—Ç–æ–≤—ã–π —á–∞—Ç'
            }, {
                headers: { Authorization: `Bearer ${adminToken}` }
            });
            console.log('‚ö†Ô∏è –°–∏—Å—Ç–µ–º–∞ —Å–æ–∑–¥–∞–ª–∞ —á–∞—Ç –±–µ–∑ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤');
        } catch (error) {
            console.log(`‚úÖ –¢—Ä–µ–±—É–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: "${error.response?.data?.error}"`);
        }

        // 4. –û–¢–ü–†–ê–í–ö–ê –°–û–û–ë–©–ï–ù–ò–ô - UX –æ—Ç–ø—Ä–∞–≤–∫–∏
        console.log('\n=== 4. –û–¢–ü–†–ê–í–ö–ê –°–û–û–ë–©–ï–ù–ò–ô - User Experience ===');
        
        const chatId = chatsRes.data.chats[0]?.id;
        
        if (chatId) {
            // –ü—É—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            try {
                await axios.post(`${BASE_URL}/chats/${chatId}/messages`, {
                    content: ''
                }, {
                    headers: { Authorization: `Bearer ${adminToken}` }
                });
                console.log('‚ö†Ô∏è –°–∏—Å—Ç–µ–º–∞ –æ—Ç–ø—Ä–∞–≤–∏–ª–∞ –ø—É—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ');
            } catch (error) {
                console.log(`‚úÖ –ë–ª–æ–∫–∏—Ä—É–µ—Ç –ø—É—Å—Ç—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è: "${error.response?.data?.error}"`);
            }

            // –û—á–µ–Ω—å –¥–ª–∏–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            const longMessage = '–ê'.repeat(10000);
            try {
                await axios.post(`${BASE_URL}/chats/${chatId}/messages`, {
                    content: longMessage
                }, {
                    headers: { Authorization: `Bearer ${adminToken}` }
                });
                console.log('‚ö†Ô∏è –°–∏—Å—Ç–µ–º–∞ –ø—Ä–∏–Ω—è–ª–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ 10k —Å–∏–º–≤–æ–ª–æ–≤ –±–µ–∑ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è');
            } catch (error) {
                console.log(`‚úÖ –ï—Å—Ç—å –ª–∏–º–∏—Ç –¥–ª–∏–Ω—ã: "${error.response?.data?.error}"`);
            }

            // –ù–æ—Ä–º–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            const msgRes = await axios.post(`${BASE_URL}/chats/${chatId}/messages`, {
                content: '–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è UX –ø—Ä–æ–≤–µ—Ä–∫–∏'
            }, {
                headers: { Authorization: `Bearer ${adminToken}` }
            });
            
            console.log(`‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ`);
            console.log(`   ID —Å–æ–æ–±—â–µ–Ω–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è? ${msgRes.data.message?.id ? '‚úÖ' : '‚ùå'}`);
            console.log(`   Timestamp –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è? ${msgRes.data.message?.created_at ? '‚úÖ' : '‚ùå'}`);
        }

        // 5. –ü–û–õ–£–ß–ï–ù–ò–ï –°–û–û–ë–©–ï–ù–ò–ô - –ß—Ç–æ –≤–∏–¥–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å?
        console.log('\n=== 5. –ü–û–õ–£–ß–ï–ù–ò–ï –°–û–û–ë–©–ï–ù–ò–ô - –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ ===');
        
        if (chatId) {
            const messagesRes = await axios.get(`${BASE_URL}/chats/${chatId}/messages`, {
                headers: { Authorization: `Bearer ${adminToken}` }
            });
            
            console.log(`‚úÖ –ü–æ–ª—É—á–µ–Ω–æ ${messagesRes.data.messages?.length || 0} —Å–æ–æ–±—â–µ–Ω–∏–π`);
            
            if (messagesRes.data.messages?.length > 0) {
                const msg = messagesRes.data.messages[0];
                console.log(`   –ï—Å—Ç—å –∏–º—è –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è? ${msg.sender_name ? '‚úÖ' : '‚ùå'}`);
                console.log(`   –ï—Å—Ç—å username? ${msg.sender_username ? '‚úÖ' : '‚ùå'}`);
                console.log(`   –ï—Å—Ç—å —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è? ${msg.sender_role ? '‚úÖ' : '‚ùå'}`);
                console.log(`   –ï—Å—Ç—å timestamp? ${msg.created_at ? '‚úÖ' : '‚ùå'}`);
                console.log(`   –ï—Å—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Ñ–∞–π–ª–æ–≤? ${msg.files !== undefined ? '‚úÖ' : '‚ùå'}`);
                console.log(`   –ï—Å—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Ä–µ–∞–∫—Ü–∏–π? ${msg.reactions !== undefined ? '‚úÖ' : '‚ùå'}`);
            }
        }

        // 6. –°–ü–ò–°–û–ö –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô - –î–ª—è –∞–¥–º–∏–Ω–∞
        console.log('\n=== 6. –°–ü–ò–°–û–ö –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô - –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å ===');
        
        const usersRes = await axios.get(`${BASE_URL}/users`, {
            headers: { Authorization: `Bearer ${adminToken}` }
        });
        
        console.log(`‚úÖ –ü–æ–ª—É—á–µ–Ω–æ ${usersRes.data.users?.length || 0} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π`);
        
        if (usersRes.data.users?.length > 0) {
            const u = usersRes.data.users[0];
            console.log(`   –í–∏–¥–Ω–æ: ${Object.keys(u).join(', ')}`);
            console.log(`   –°–∫—Ä—ã—Ç –ø–∞—Ä–æ–ª—å? ${!u.password && !u.password_hash ? '‚úÖ' : '‚ùå –û–ü–ê–°–ù–û!'}`);
            console.log(`   –ï—Å—Ç—å last_seen? ${u.last_seen ? '‚úÖ' : '‚ùå'}`);
            console.log(`   –ï—Å—Ç—å is_active? ${typeof u.is_active !== 'undefined' ? '‚úÖ' : '‚ùå'}`);
        }

        // 7. –°–û–ó–î–ê–ù–ò–ï –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø - –í–∞–ª–∏–¥–∞—Ü–∏—è
        console.log('\n=== 7. –°–û–ó–î–ê–ù–ò–ï –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø - –í–∞–ª–∏–¥–∞—Ü–∏—è ===');
        
        // –î—É–±–ª–∏–∫–∞—Ç username
        try {
            await axios.post(`${BASE_URL}/auth/register`, {
                username: 'admin',
                password: 'test123',
                name: 'Test',
                role: 'employee',
                department: 'IT'
            }, {
                headers: { Authorization: `Bearer ${adminToken}` }
            });
            console.log('‚ùå –°–∏—Å—Ç–µ–º–∞ —Å–æ–∑–¥–∞–ª–∞ –¥—É–±–ª–∏–∫–∞—Ç username');
        } catch (error) {
            console.log(`‚úÖ –ë–ª–æ–∫–∏—Ä—É–µ—Ç –¥—É–±–ª–∏–∫–∞—Ç—ã: "${error.response?.data?.error}"`);
        }

        // –°–ª–∞–±—ã–π –ø–∞—Ä–æ–ª—å
        try {
            await axios.post(`${BASE_URL}/auth/register`, {
                username: 'testuser' + Date.now(),
                password: '123',
                name: 'Test',
                role: 'employee',
                department: 'IT'
            }, {
                headers: { Authorization: `Bearer ${adminToken}` }
            });
            console.log('‚ö†Ô∏è –°–∏—Å—Ç–µ–º–∞ –ø—Ä–∏–Ω—è–ª–∞ —Å–ª–∞–±—ã–π –ø–∞—Ä–æ–ª—å (123)');
        } catch (error) {
            console.log(`‚úÖ –¢—Ä–µ–±—É–µ—Ç —Å–∏–ª—å–Ω—ã–π –ø–∞—Ä–æ–ª—å: "${error.response?.data?.error}"`);
        }

        // 8. –°–¢–ê–¢–ò–°–¢–ò–ö–ê - –ù–∞—Å–∫–æ–ª—å–∫–æ –æ–Ω–∞ –ø–æ–ª–µ–∑–Ω–∞?
        console.log('\n=== 8. –°–¢–ê–¢–ò–°–¢–ò–ö–ê - –ü–æ–ª–µ–∑–Ω–æ—Å—Ç—å –¥–ª—è –±–∏–∑–Ω–µ—Å–∞ ===');
        
        const statsRes = await axios.get(`${BASE_URL}/users/stats`, {
            headers: { Authorization: `Bearer ${adminToken}` }
        });
        
        console.log(`‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:`);
        console.log(`   –í—Å–µ–≥–æ: ${statsRes.data.overall?.total_users || 0}`);
        console.log(`   –ê–∫—Ç–∏–≤–Ω—ã—Ö: ${statsRes.data.overall?.active_users || 0}`);
        console.log(`   –û–Ω–ª–∞–π–Ω: ${statsRes.data.overall?.online_users || 0}`);
        console.log(`   –ü–æ –æ—Ç–¥–µ–ª–∞–º: ${statsRes.data.byDepartment?.length || 0} –æ—Ç–¥–µ–ª–æ–≤`);
        
        const msgStats = await axios.get(`${BASE_URL}/messages/stats`, {
            headers: { Authorization: `Bearer ${adminToken}` }
        });
        
        console.log(`‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π:`);
        console.log(`   –í—Å–µ–≥–æ: ${msgStats.data.overall?.total_messages || 0}`);
        console.log(`   –ó–∞ 24—á: ${msgStats.data.overall?.messages_24h || 0}`);
        console.log(`   –ê–∫—Ç–∏–≤–Ω—ã—Ö —á–∞—Ç–æ–≤: ${msgStats.data.overall?.active_chats || 0}`);
        console.log(`   –¢–æ–ø —é–∑–µ—Ä–æ–≤: ${msgStats.data.topUsers?.length || 0}`);

        // 9. –ü–†–ê–í–ê –î–û–°–¢–£–ü–ê - –ü–æ–Ω—è—Ç–Ω—ã –ª–∏ –æ—à–∏–±–∫–∏?
        console.log('\n=== 9. –ü–†–ê–í–ê –î–û–°–¢–£–ü–ê - User Experience ===');
        
        // –õ–æ–≥–∏–Ω –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞
        const opLogin = await axios.post(`${BASE_URL}/auth/login`, {
            username: 'operator1',
            password: 'operator123'
        });
        operatorToken = opLogin.data.token;
        
        // –û–ø–µ—Ä–∞—Ç–æ—Ä –ø—ã—Ç–∞–µ—Ç—Å—è —Å–æ–∑–¥–∞—Ç—å –≥—Ä—É–ø–ø—É
        try {
            await axios.post(`${BASE_URL}/chats/group`, {
                name: 'Test',
                participantIds: [1, 2]
            }, {
                headers: { Authorization: `Bearer ${operatorToken}` }
            });
            console.log('‚ùå –û–ø–µ—Ä–∞—Ç–æ—Ä —Å–æ–∑–¥–∞–ª –≥—Ä—É–ø–ø—É (–Ω–µ –¥–æ–ª–∂–µ–Ω)');
        } catch (error) {
            if (error.response?.status === 403) {
                console.log(`‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å 403`);
                console.log(`   –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–Ω—è—Ç–Ω–æ–µ? "${error.response.data.error}"`);
            } else {
                console.log(`‚ö†Ô∏è –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å: ${error.response?.status}`);
            }
        }

        // –û–ø–µ—Ä–∞—Ç–æ—Ä –ø—ã—Ç–∞–µ—Ç—Å—è –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        try {
            await axios.get(`${BASE_URL}/users`, {
                headers: { Authorization: `Bearer ${operatorToken}` }
            });
            console.log('‚ùå –û–ø–µ—Ä–∞—Ç–æ—Ä –ø–æ–ª—É—á–∏–ª —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');
        } catch (error) {
            console.log(`‚úÖ –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω: "${error.response?.data?.error}"`);
        }

        console.log('\n=== ‚úÖ UX/UI –ê–£–î–ò–¢ –ó–ê–í–ï–†–®–ï–ù ===\n');

    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error.message);
    }
}

testUserExperience();
